#!/usr/bin/env bash

#/ command: stubbs:add-command: "add command to module"
#/ usage: rerun stubbs:add-command  --command|-c <>  --description <>  --module|-m <> [ --overwrite <false>] [ --generate-help <true>] 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: COMMAND DESCRIPTION MODULE OVERWRITE GENERATE_HELP

. $RERUN_MODULE_DIR/lib/functions.sh add-command || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"

# Command implementation
# ----------------------

# - - -

STUB=$RERUN_MODULE_DIR/lib/stub/bash

OPTIONS_SCRIPT=$(rerun_property_get $STUB OPTIONS_SCRIPT)

RERUN_MODULE_HOME_DIR=$(rerun_module_exists $MODULE)

OPTIONS_PARSER_SCRIPT=$RERUN_MODULE_HOME_DIR/commands/$COMMAND/$OPTIONS_SCRIPT

# Create command structure
mkdir -p $RERUN_MODULE_HOME_DIR/commands/$COMMAND || rerun_die "Failed creating command structure"

VARIABLES=$(stubbs_option_variables $RERUN_MODULE_HOME_DIR $COMMAND)

TEMPLATE_COMMAND_SCRIPT=$(rerun_property_get $STUB TEMPLATE_COMMAND_SCRIPT)

TEMPLATE=$STUB/$TEMPLATE_COMMAND_SCRIPT
[ ! -f "$TEMPLATE" ] && {
    rerun_syntax_error "command script template not found: \"$TEMPLATE\""
}

CMD_SCRIPT=$RERUN_MODULE_HOME_DIR/commands/$COMMAND/$(basename $TEMPLATE_COMMAND_SCRIPT)

# Generate a boiler plate implementation
[ ! -f $CMD_SCRIPT -o "${OVERWRITE:-}" == "true" ] && {
    sed -e "s/@COMMAND@/$COMMAND/g" \
	-e "s/@MODULE@/$MODULE/g" \
	-e "s^@DESCRIPTION@^$DESCRIPTION^g" \
    -e "s/@VARIABLES@/$VARIABLES/g" \
	$TEMPLATE > $CMD_SCRIPT || rerun_die "Failed generating stub comand script."
    rerun_log info "Wrote command script: $CMD_SCRIPT"
}
chmod +x $CMD_SCRIPT || rerun_die "Failed setting execute bit on command script."

# Generate command metadata
(
cat <<EOF
# command metadata
# generated by stubbs:add-command
# $(date)
NAME=$COMMAND
DESCRIPTION="$DESCRIPTION"
OPTIONS=
GENERATE_HELP="${GENERATE_HELP:-true}"
EOF

) > $RERUN_MODULE_HOME_DIR/commands/$COMMAND/metadata || rerun_die "Failed creating command metadata."
rerun_log info "Wrote command metadata: $RERUN_MODULE_HOME_DIR/commands/$COMMAND/metadata"

# Generate blank option parser script that just includes _CMD_LINE
.  $STUB/metadata || {
    rerun_die "error reading  $RERUN_MODULE_DIR/lib/stub/bash/metadata "
}
[ -z "$OPTIONS_GENERATOR" ] && {
    rerun_die "required metadata not found: OPTIONS_GENERATOR"
}
[ -z "$OPTIONS_SCRIPT" ] && {
   rerun_die "required metadata not found: OPTIONS_SCRIPT"
}
$STUB/$OPTIONS_GENERATOR \
    $(dirname $RERUN_MODULE_HOME_DIR) $MODULE $COMMAND > $OPTIONS_PARSER_SCRIPT || {
    rerun_die "Failed generating options parser."
}
rerun_log info "Wrote options parser: $OPTIONS_PARSER_SCRIPT"

# Generate a unit test script
mkdir -p $RERUN_MODULE_HOME_DIR/tests || rerun_die "failed creating tests directory"
[ ! -f $RERUN_MODULE_HOME_DIR/tests/$COMMAND-1-test.sh -o "${OVERWRITE:-}" == "true" ] && {
    sed -e "s/@MODULE@/$MODULE/g" \
	-e "s/@COMMAND@/$COMMAND/g" \
	-e "s;@RERUN@;${RERUN};g" \
	-e "s;@RERUN_MODULES@;${RERUN_MODULES};g" \
	$RERUN_MODULE_DIR/templates/test.roundup > $RERUN_MODULE_HOME_DIR/tests/$COMMAND-1-test.sh || rerun_die
    rerun_log info "Wrote test script: $RERUN_MODULE_HOME_DIR/tests/$COMMAND-1-test.sh"
}
[ ! -f $RERUN_MODULE_HOME_DIR/tests/functions.sh -o "${OVERWRITE:-}" == "true" ] && {
    sed -e "s/@MODULE@/$MODULE/g" \
	$RERUN_MODULE_DIR/templates/test.functions.sh > $RERUN_MODULE_HOME_DIR/tests/functions.sh || rerun_die "Failed generating test functions library."
  rerun_log info "Wrote test function library: $RERUN_MODULE_HOME_DIR/tests/functions.sh"
}

# - - -

# Done. Exit with last command exit status.
exit 0
